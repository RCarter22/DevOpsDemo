<!DOCTYPE html>
<html ng-app="emm" ng-controller="MainController" ng-cloak>
	<head>
		<title>EZMaxMobile - Offline</title>
		<emm:include value="../common/includes.htm"/>
	</head>
	<body>
		<div class="ui-page ui-inset">
			<emm:include value="../common/menu.htm"/>
			<div class="ui-header ui-header-b">
				<a ng-click="goBack()" class="ui-btn-left" translate="BACK">Back</a>
				<h3 class="ui-title" translate="CLASSIFY.CLASSASSET">Classify Asset</h3>
				<a ng-click="actions.saveAssetClassifications(asset,assetspecs,genDesc, pathSet)" class="ui-btn-right" ng-class="{'ui-btn-c' : specsToBeSaved()}"  translate="SAVE">Save</a>
			</div>
			<div class="ui-statusbar ui-statusbar-f">
				<h5 class="ui-title" translate="OFFLINEMODE">Offline Mode</h5>
			</div>
			<div class="ui-statusbar ui-statusbar-d" ng-show="message != null"><h3 class="ui-title">{{message}}</h3></div>
			<div class="ui-content">
				<div class="ui-content">
					<ul class="ui-listview">
						<li class="ui-field">
							<label translate="ASSET.ASSETNUM">Asset</label>
							<p>{{asset.ASSETNUM}}</p>
						</li>
						<li class="ui-field ui-field-auto">
							<label translate="CLASSIFY.CLASSIFICATION">Classification</label>
							<p>{{classstructure.HIERARCHY}}</p>
						</li>
						<li class="ui-field ui-field-auto">
							<label translate="CLASSIFY.DESCRIPTION">Class Description</label>
							<p>{{classstructure.DESCRIPTION}}</p>
							<!-- <a class="ui-arrow" onclick="" href="#classificationlookupdialog" data-control="dialog"></a> -->
						</li>
					</ul>
				</div>
				<d ng-show='assetspecs.length > 0'>
					<ul class="ui-listview">		
						<li class="ui-field" ng-repeat="s in assetspecs track by $index" ng-show="s.DATATYPE == 'ALN' || s.DATATYPE == 'NUMERIC'" >
							<label>{{s.ASSETATTRID}}</label>
                            <input type="text" ng-show="s.DATATYPE == 'NUMERIC' && !(s.DOMAINID)" ng-model="s.NUMVALUE" ng-required="s.mbo.isRequired('NUMVALUE')" placeholder="NUMERIC" ng-blur="setValue($event, s)"/>
                            <input type="text" disabled="true" ng-show="s.DATATYPE == 'NUMERIC' && s.DOMAINID" ng-model="s.NUMVALUE" ng-required="s.mbo.isRequired('NUMVALUE')"/>
							<input type="text" ng-show="s.DATATYPE == 'ALN' && !(s.DOMAINID)" ng-model="s.ALNVALUE" ng-required="s.mbo.isRequired('ALNVALUE')" placeholder="ALN" ng-blur="setValue($event, s)"/>
                            <input type="text" disabled="true" ng-show="s.DATATYPE == 'ALN' && s.DOMAINID" ng-model="s.ALNVALUE" ng-required="s.mbo.isRequired('ALNVALUE')"/>
							<a class="ui-arrow" ng-show="s.DATATYPE == 'NUMERIC' && s.DOMAINID" ng-click="domain($event, s, submitData)" data-field="NUMVALUE" data-display="VALUE,DESCRIPTION"></a>
							<a class="ui-arrow" ng-show="s.DATATYPE == 'ALN' && s.DOMAINID" ng-click="domain($event, s, submitData)" data-field="ALNVALUE" data-display="VALUE,DESCRIPTION"></a>
						</li>
					</ul>
				</d>
			</div>
		</div>
		<div id="classificationlookupdialog" class="ui-dialog">
			<div class="ui-container">
				<div class="ui-header">
					<h1 class="ui-title">Classification</h1>
				</div>
				<div class="ui-content">
					<div class="ui-btn-container">
						<a class="ui-btn-a" ng-click="domainClassify($event, asset, submitData)" data-field="CLASSSTRUCTUREID" data-display="CLASSIFICATIONID, DESCRIPTION, CLASSSTRUCTUREID" translate="LOOKUP">Lookup</a>
					</div>
					<div class="ui-btn-container">
						<a class="ui-btn-a" ng-click="classificationDrilldown(asset, null, null, submitData)" translate="DRILLDOWN">Drilldown</a>
					</div>
				</div>
			</div>
		</div>
		<script type="text/javascript">
			function MainController ($scope, plustassetService, domainService){
				var viewName = 'offline/plustasset/classify.htm',
					specsQueryName = 'SPECS',
					dbspecsQueryName = 'DBSPECS',
					classQueryName = 'CLASSSTRUCT',
					assetAttributeQueryName = 'ASSETATTR',
					appName = 'PLUSTASSET';
				
				
				EMMServer.Offline.setSyncViewName(viewName);
				$scope.userInfo = EMMServer.DB.getUserInfo();
				$scope.TXNCOUNT = EMMServer.DB.getUserTxnCount();
				
				//Initialize Asset Service
				plustassetService.init({
					userInfo : $scope.userInfo,
					viewName : viewName
				});
				//Initialize Domain Service
				domainService.init({
					userInfo : $scope.userInfo,
					viewName : viewName
				});
				$scope.domain = domainService.domain;
				$scope.domainClassify = domainService.domainClassify;
				$scope.classificationDrilldown = domainService.classificationDrilldown;
				$scope.actions = plustassetService.actions;
				var classify = plustassetService.classify;

				//Get the Message Data
				var messages = EMMServer.DB.getQueryResult("MESSAGE");
				if (messages)
					$scope.message = messages[0].DISPLAYMESSAGE;
				
				
				// Get Classstructure Object Data
				var classSet = EMMServer.DB.getQueryResult(classQueryName);
				if (classSet){
					if (classSet.length>0)
                    {
						classSet = classSet[0];
						$scope.classstructure = {
							CLASSIFICATIONID : classSet.CLASSIFICATIONID,
							DESCRIPTION : classSet.DESCRIPTION,
							GENASSETDESC : classSet.GENASSETDESC
							
						}
						//Get ClassStructure Path
						$scope.pathSet = EMMServer.DB.getQueryResult("PATH");
						if($scope.pathSet)
							$scope.classstructure.HIERARCHY = classify.getClassHierarchy($scope.pathSet);
                    } 
				}
				
				
				//Gen Description
				$scope.genDesc= false;
				if($scope.classstructure)
				{
                    if($scope.classstructure.GENASSETDESC == '1')
					   $scope.genDesc = true;	
				}
				
				
				//Get Asset Data
				var pageData = EMMServer.Session.getItem('ASSET');
				$scope.asset = EMMServer.Session.getMboFromSession(pageData.cacheKey);
				$scope.asset.mbo.appName(appName);
				
				//Get The AssetSpecs Data
				var assetAttributeSet = EMMServer.DB.getQueryResult(assetAttributeQueryName);
				if(assetAttributeSet)//If new set of attributes is needed
				{

					$scope.assetspecs = classify.createAssetSpecs($scope.asset, assetAttributeSet);
					var sqlSpecs = classify.getAssetSpecSQL($scope.assetspecs);
					var sqlClass = "SELECT * FROM CLASSSTRUCTURE WHERE CLASSSTRUCTUREID = '" + $scope.asset.CLASSSTRUCTUREID + "' AND OBJECTVALUE = 'ASSET'";
					var sqlPath = "WITH RECURSIVE cp AS ("
			    					+"SELECT CLASSSTRUCTUREID, CLASSIFICATIONID, PARENT FROM CLASSSTRUCTURE WHERE CLASSSTRUCTUREID = '" + $scope.asset.CLASSSTRUCTUREID + "' AND OBJECTVALUE = 'ASSET'"
			    					+" UNION ALL "
			    					+" SELECT CLASSSTRUCTURE.CLASSSTRUCTUREID, CLASSSTRUCTURE.CLASSIFICATIONID, CLASSSTRUCTURE.PARENT FROM CLASSSTRUCTURE INNER JOIN cp "
			    					+" ON CLASSSTRUCTURE.CLASSSTRUCTUREID=cp.PARENT AND CLASSSTRUCTURE.OBJECTVALUE = 'ASSET'"
			    					+" WHERE cp.PARENT IS NOT NULL "
				    			+")"
				    			+"SELECT * FROM cp";
					var sqlDBSpecs = "SELECT * FROM ASSETSPEC WHERE ASSETUID = '" + $scope.asset.ASSETUID + "' AND CLASSSTRUCTUREID = '" +$scope.asset.CLASSSTRUCTUREID+ "' ORDER BY CAST(DISPLAYSEQUENCE  AS UNSIGNED)";
					EMMServer.Session.setItem('ASSET',{
						returnPage : pageData.returnPage,
						cacheKey : $scope.asset.session.cacheKey()
					});
					try
					{
						EMMServer.DB.Select()
						.addQuery("SPECS", sqlSpecs)
						.addQuery("CLASSSTRUCT", sqlClass)
						.addQuery("PATH", sqlPath)
						.addQuery("DBSPECS", sqlDBSpecs)
						.submit("offline/plustasset/classify.htm",true);
					}
					catch(err)
					{
						$scope.classstructure.HIERARCHY = $scope.classstructure.CLASSIFICATIONID + ": Unable to retreive HIERARCHY";
					}
					
				}
				else
				{
					var specset = EMMServer.DB.getMboSet('AssetSpec', specsQueryName);
					var dbspecset = [];
					var dbspecresult = EMMServer.DB.getQueryResult(dbspecsQueryName);
					if(dbspecresult)
                    {
						var dbspecset = EMMServer.DB.getMboSet('AssetSpec', dbspecsQueryName);
                    }
					if(dbspecset.length>0)
						$scope.assetspecs = dbspecset;
					else
						$scope.assetspecs = specset;
				}
				
				//Page and Object Data to Provide to Lookup and Drilldown
				var whereclause ="OBJECTVALUE = 'ASSET' AND (SITEID = '"+$scope.asset.SITEID+"' OR SITEID IS NULL)";
				var submitData = 
				{
					object:'ASSET',
					returnpage:'offline/plustasset/asset.htm',
					submit:"offline/plustasset/classify.htm",
					where: whereclause
				};
                $scope.submitData = submitData;

				//Watches assets and assetspecs to be saved
				var i = 0;
				while(i<$scope.assetspecs.length)
				{
					var temp = 'assetspecs['+i+']';
                    var spec = $scope.assetspecs[i];
					$scope.$watch('assetspecs['+i+']', function(newValue, oldValue) {
						if (newValue !== oldValue)
                        {
							spec.mbo.toBeSaved(true);
                        }
					}, true);
					i++;
				}
				
				//Returns if this page needs to be saved
				$scope.specsToBeSaved = function(){
					if($scope.asset.mbo.toBeSaved())
						return true;
					var i = 0;
					while(i<$scope.assetspecs.length)
					{
						if($scope.assetspecs[i].mbo.toBeSaved())
							return true;
						i++;
					}
					return false;
				}
				
				$scope.setValue = function() {
					var element = $(arguments[0].target || arguments[0]);
		            var obj = arguments[1]; //object containing the function with try catch
	            	$scope.asset.mbo.toBeSaved(true);
	            	obj.session.cache();
				}
				
				$scope.goBack = function(){
					$scope.asset.session.remove();
					for(var i=0; i < $scope.assetspecs.length; i++){
 						$scope.assetspecs[i].session.remove();
 					}
					EMMServer.DB.Select()
					.go(pageData.returnPage);
				}
				
			}
		</script>	
	</body>
</html>
